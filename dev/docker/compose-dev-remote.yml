version: '3.8'

services:
  postgres:
    image: postgis/postgis:16-3.4
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  backend:
    image: jkazmierczak/geosurveymap-backend:latest
    ports:
      - "80:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_URL:-postgres:5432/postgres}
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-root}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: [ "./wait-for-it.sh", "postgis:5432", "--", "java", "-jar", "app.jar" ]
    depends_on:
      - postgres

  minio:
    image: minio/minio
    command: server --console-address ":9090" /mnt/data
    ports:
      - "9000:9000"
      - "9001:9001"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/mnt/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  create-buckets:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: >
      /bin/sh -c "
      ./wait-for-it.sh minio:9000 -- 
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/surveyimages || echo 'Bucket already exists';
      /usr/bin/mc anonymous set download myminio/surveyimages || echo 'Failed to set public policy';
      exit 0;
      "


volumes:
  postgres:
  minio_data: